import urllib
import json
def token(appid, secret):
    query = {}
    query['grant_type'] = 'client_credential'
    query['appid'] = appid
    query['secret'] = secret
    addr = 'https://api.weixin.qq.com/cgi-bin/token'
    rep = urllib.urlopen(addr + '?' + urllib.urlencode(query))
    if 200 == rep.getcode():
        return json.loads(rep.read())['access_token']
    return None

import os  
import mimetypes  
import mimetools  
  
def get_content_type(filepath):  
    return mimetypes.guess_type(filepath)[0] or 'application/octet-stream'  
  
def encode_multipart_formdata(fields, files=[]):  
    """ 
    fields is a sequence of (name, value) elements for regular form fields. 
    files is a sequence of (name, filepath) elements for data to be uploaded as files 
    Return (content_type, body) ready for httplib.HTTP instance 
    """  
    BOUNDARY = mimetools.choose_boundary()  
    CRLF = '\r\n'  
    L = []  
    for (key, value) in fields:  
        L.append('--' + BOUNDARY)  
        L.append('Content-Disposition: form-data; name="%s"' % key)  
        L.append('')  
        L.append(value)  
    for (key, filepath) in files:  
        L.append('--' + BOUNDARY)  
        L.append('Content-Disposition: form-data; name="%s"; filename="%s"' % (key, os.path.basename(filepath)))  
        L.append('Content-Type: %s' % get_content_type(filepath))  
        L.append('')  
        L.append(open(filepath, 'rb').read())  
    L.append('--' + BOUNDARY + '--')  
    L.append('')  
    body = CRLF.join(L)  
    content_type = 'multipart/form-data; boundary=%s' % BOUNDARY  
    return content_type, body  


def upload_media():
    query = {'access_token':token}
    addr = 'https://api.weixin.qq.com/cgi-bin/media/uploadimg'
    rep = urllib.urlopen(addr + '?' + urllib.urlencode(query), data)
    


def push_article():
    pass


if __name__ == '__main__':
    import sys
    token = ''
    with open('token.txt', 'rb') as f:
        token = f.read()
    if token == '':
        token = token(sys.argv[1], sys.argv[2])
        with open('token.txt', 'wb') as f:
            f.write(token)


